# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import typing
from ...voices.types.voice import Voice
import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2


class PaginatedVoices(UniversalBaseModel):
    """
    Paginated list of voices created from a fine-tune
    """

    data: typing.List[Voice] = pydantic.Field()
    """
    List of voice objects
    """

    has_more: bool = pydantic.Field()
    """
    Whether there are more voices available
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
