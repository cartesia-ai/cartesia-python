# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import pydantic
from .fine_tune_status import FineTuneStatus
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import typing


class FineTune(UniversalBaseModel):
    """
    Information about a fine-tune
    """

    id: str = pydantic.Field()
    """
    Unique identifier for the fine-tune
    """

    name: str = pydantic.Field()
    """
    Name of the fine-tune
    """

    description: str = pydantic.Field()
    """
    Description of the fine-tune
    """

    language: str = pydantic.Field()
    """
    Language code of the fine-tune
    """

    model_id: str = pydantic.Field()
    """
    Base model identifier to fine-tune from
    """

    dataset: str = pydantic.Field()
    """
    ID of the dataset used for fine-tuning
    """

    status: FineTuneStatus = pydantic.Field()
    """
    Current status of the fine-tune
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
