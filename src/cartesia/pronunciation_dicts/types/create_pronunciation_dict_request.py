# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import pydantic
import typing
from .pronunciation_dict_item import PronunciationDictItem
from ...core.pydantic_utilities import IS_PYDANTIC_V2


class CreatePronunciationDictRequest(UniversalBaseModel):
    """
    Request to create a new pronunciation dictionary
    """

    name: str = pydantic.Field()
    """
    Name for the new pronunciation dictionary
    """

    description: typing.Optional[str] = pydantic.Field(default=None)
    """
    Description for the new pronunciation dictionary
    """

    items: typing.Optional[typing.List[PronunciationDictItem]] = pydantic.Field(default=None)
    """
    Optional initial list of unique pronunciation mappings
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
