# This file was auto-generated by Fern from our API Definition.

import typing_extensions
import typing_extensions
import typing
from .text_chunk import TextChunkParams
from .tool_call import ToolCallParams
from .log_event import LogEventParams
from .log_metric import LogMetricParams


class AgentTranscriptParams(typing_extensions.TypedDict):
    role: str
    """
    The role of the participant in the conversation. Roles are `user`, `assistant`, or `system`. `assistant` is the agent. `system` is used to indicate logs during the conversation such as `log_event` or `log_metric`.
    """

    text: typing_extensions.NotRequired[str]
    """
    The text content of the transcript. This is the text that was spoken by the user or the agent.
    """

    text_chunks: typing_extensions.NotRequired[typing.Sequence[TextChunkParams]]
    """
    The chunks of text at a more granular level in the transcript with timestamps relative to the start of the call.
    """

    start_timestamp: float
    """
    The start timestamp in seconds relative to the start of the call.
    """

    end_timestamp: float
    """
    The end timestamp in seconds relative to the start of the call.
    """

    end_reason: typing_extensions.NotRequired[str]
    """
    The reason for why the assistant turn ended. This could be `call_ended`, `interrupted`, or `tts_completed`.
    """

    tool_calls: typing_extensions.NotRequired[typing.Sequence[ToolCallParams]]
    """
    The tool calls made during the turn.
    """

    vad_buffer_ms: typing_extensions.NotRequired[int]
    """
    The VAD buffer time in milliseconds.
    """

    tts_ttfb: typing_extensions.NotRequired[float]
    """
    The time to first byte in seconds from the agent for text-to-speech.
    """

    log_event: typing_extensions.NotRequired[LogEventParams]
    """
    The log event from user code.
    """

    log_metric: typing_extensions.NotRequired[LogMetricParams]
    """
    The log metric from user code.
    """
