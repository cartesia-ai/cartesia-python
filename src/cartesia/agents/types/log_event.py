# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import pydantic
import typing
from ...core.pydantic_utilities import IS_PYDANTIC_V2


class LogEvent(UniversalBaseModel):
    event: str = pydantic.Field()
    """
    The event name.
    """

    metadata: typing.Dict[str, str] = pydantic.Field()
    """
    Additional metadata associated with the event.
    """

    timestamp: float = pydantic.Field()
    """
    The timestamp when the event was received relative to the start of the call.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
