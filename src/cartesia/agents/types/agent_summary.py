# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import pydantic
import typing
import datetime as dt
from ...voices.types.voice_id import VoiceId
from .git_repository import GitRepository
from .phone_number_summary import PhoneNumberSummary
from ...core.pydantic_utilities import IS_PYDANTIC_V2


class AgentSummary(UniversalBaseModel):
    """
    A summary of essential information about an agent.
    """

    id: str = pydantic.Field()
    """
    The ID of the agent.
    """

    name: str = pydantic.Field()
    """
    The unique name of the agent, which can be used to identify the agent in the CLI.
    """

    description: typing.Optional[str] = pydantic.Field(default=None)
    """
    A brief description of the agent.
    """

    created_at: dt.datetime = pydantic.Field()
    """
    The date and time when the agent was created.
    """

    updated_at: dt.datetime = pydantic.Field()
    """
    The date and time when the agent was last updated.
    """

    tts_voice: VoiceId = pydantic.Field()
    """
    The text-to-speech voice used by the agent.
    """

    tts_language: str = pydantic.Field()
    """
    The language used for text-to-speech by the agent.
    """

    webhook_id: typing.Optional[str] = pydantic.Field(default=None)
    """
    The identifier for the webhook associated with the agent. Add or customize a webhook to your agent to receive events when calls are made to your agent via the Playground.
    """

    deleted_at: typing.Optional[dt.datetime] = pydantic.Field(default=None)
    """
    The date and time when the agent was deleted, if applicable.
    """

    git_repository: typing.Optional[GitRepository] = pydantic.Field(default=None)
    """
    The Git repository associated with the agent.
    """

    git_deploy_branch: typing.Optional[str] = pydantic.Field(default=None)
    """
    The branch of the Git repository used for deployment.
    """

    phone_numbers: typing.Optional[typing.List[PhoneNumberSummary]] = pydantic.Field(default=None)
    """
    The phone numbers associated with the agent. Currently, you can only have one phone number per agent.
    """

    has_text_to_agent_run: bool = pydantic.Field()
    """
    Whether the agent has a text-to-agent run.
    """

    deployment_count: int = pydantic.Field()
    """
    The number of deployments associated with the agent.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
