# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import pydantic
import typing
from ...core.pydantic_utilities import IS_PYDANTIC_V2


class ToolCall(UniversalBaseModel):
    id: str = pydantic.Field()
    """
    The unique identifier for the tool call.
    """

    name: str = pydantic.Field()
    """
    The name of the tool that was called.
    """

    arguments: typing.Dict[str, str] = pydantic.Field()
    """
    The arguments passed to the tool.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
