# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import pydantic
import typing
from ...core.pydantic_utilities import IS_PYDANTIC_V2


class CreateMetricRequest(UniversalBaseModel):
    name: str = pydantic.Field()
    """
    The name of the metric. This must be a unique name that only allows lower case letters, numbers, and the characters _, -, and .
    """

    display_name: typing.Optional[str] = pydantic.Field(default=None)
    """
    The display name of the metric.
    """

    prompt: str = pydantic.Field()
    """
    The prompt associated with the metric, detailing the task and evaluation criteria.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
