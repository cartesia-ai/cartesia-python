# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import pydantic
import datetime as dt
import typing
from ...core.pydantic_utilities import IS_PYDANTIC_V2


class Deployment(UniversalBaseModel):
    id: str = pydantic.Field()
    """
    The unique identifier for the deployment.
    """

    agent_id: str = pydantic.Field()
    """
    The ID of the agent associated with this deployment.
    """

    status: str = pydantic.Field()
    """
    The current status of the deployment. It can be `queued`, `inactive`, `deploy_error`, `skipped`, `build_error`, `building`, or `deployed`.
    """

    is_pinned: bool = pydantic.Field()
    """
    Marks that this deployment is the active deployment for its associated `agent_id`. Only one deployment per agent can be pinned at a time. Deployments can be pinned even if they are not live or failed.
    """

    is_live: bool = pydantic.Field()
    """
    True if this deployment is the live production deployment for its associated `agent_id`. Only one deployment per agent can be live at a time.
    """

    env_var_collection_id: str = pydantic.Field()
    """
    The ID of the environment variable collection associated with this deployment.
    """

    source_code_file_id: str = pydantic.Field()
    """
    The ID of the source code file associated with this deployment.
    """

    git_commit_hash: str = pydantic.Field()
    """
    The commit hash of the Git repository for this deployment.
    """

    created_at: dt.datetime = pydantic.Field()
    """
    The UTC timestamp when the deployment was created.
    """

    updated_at: dt.datetime = pydantic.Field()
    """
    The UTC timestamp when the deployment was last updated.
    """

    build_completed_at: dt.datetime = pydantic.Field()
    """
    The UTC timestamp when the build was completed.
    """

    build_error: typing.Optional[str] = pydantic.Field(default=None)
    """
    Any error that occurred during the build process.
    """

    build_logs: str = pydantic.Field()
    """
    Logs generated during the build process of the deployment.
    """

    build_started_at: dt.datetime = pydantic.Field()
    """
    The UTC timestamp when the build process started.
    """

    deployment_started_at: dt.datetime = pydantic.Field()
    """
    The UTC timestamp when the deployment process started.
    """

    deployment_completed_at: dt.datetime = pydantic.Field()
    """
    The UTC timestamp when the deployment process was completed.
    """

    deployment_error: typing.Optional[str] = pydantic.Field(default=None)
    """
    Any error that occurred during the deployment process.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
